from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from utils.keyboards import get_main_keyboard, get_conflict_keyboard
from data.conflict_data import nvc_steps

async def show_conflict_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = """
    üö® *–£ –Ω–∞—Å —Å—Å–æ—Ä–∞*

    –Ø –ø–æ–º–æ–≥—É –≤–∞–º –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–æ —Ä–µ—à–∏—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ *–ù–µ–Ω–∞—Å–∏–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –û–±—â–µ–Ω–∏—è* (–ù–ù–û).

    üìã *4 —à–∞–≥–∞ –ù–ù–û:*
    1. üìù *–ù–∞–±–ª—é–¥–µ–Ω–∏—è* - —Ñ–∞–∫—Ç—ã –±–µ–∑ –æ—Ü–µ–Ω–æ–∫
    2. üíñ *–ß—É–≤—Å—Ç–≤–∞* - –≤–∞—à–∏ —ç–º–æ—Ü–∏–∏
    3. üéØ *–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏* - —á—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –≤–∞—Å
    4. üôè *–ü—Ä–æ—Å—å–±–∞* - –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ

    *–†–µ–∑—É–ª—å—Ç–∞—Ç:* –ì–æ—Ç–æ–≤–∞—è —Ñ—Ä–∞–∑–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ —Å –ø–∞—Ä—Ç–Ω–µ—Ä–æ–º

    –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    await update.message.reply_text(text, reply_markup=get_conflict_keyboard(), parse_mode='Markdown')

async def start_nvc_process(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['nvc_data'] = {
        'current_step': 1,
        'answers': {}
    }
    
    await show_nvc_step(update, context)

async def show_nvc_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    nvc_data = context.user_data.get('nvc_data', {})
    current_step = nvc_data.get('current_step', 1)
    
    if current_step > len(nvc_steps):
        await show_final_phrase(update, context)
        return
    
    step_info = nvc_steps[current_step - 1]
    
    text = f"""
    *–®–∞–≥ {step_info['step']}: {step_info['title']}*

    {step_info['question']}

    {step_info['example']}

    ‚úçÔ∏è *–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –æ—Ç–≤–µ—Ç:*
    """
    
    keyboard = [['üîô –ù–∞–∑–∞–¥']]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    await update.message.reply_text(text, reply_markup=reply_markup, parse_mode='Markdown')

async def process_nvc_step(update: Update, context: ContextTypes.DEFAULT_TYPE):
    nvc_data = context.user_data.get('nvc_data', {})
    current_step = nvc_data.get('current_step', 1)
    
    if current_step > len(nvc_steps):
        return
    
    user_answer = update.message.text
    step_info = nvc_steps[current_step - 1]
    
    nvc_data['answers'][step_info['key']] = user_answer
    context.user_data['nvc_data'] = nvc_data
    
    nvc_data['current_step'] += 1
    context.user_data['nvc_data'] = nvc_data
    
    await show_nvc_step(update, context)

async def show_final_phrase(update: Update, context: ContextTypes.DEFAULT_TYPE):
    nvc_data = context.user_data.get('nvc_data', {})
    answers = nvc_data.get('answers', {})

    observation = answers.get('observation', '')
    feelings = answers.get('feelings', '')
    needs = answers.get('needs', '')
    request = answers.get('request', '')
    
    final_phrase = f"""
    üí´ *–ì–æ—Ç–æ–≤–∞—è —Ñ—Ä–∞–∑–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:*

    ¬´–ö–æ–≥–¥–∞ {observation}, 
    —è —á—É–≤—Å—Ç–≤—É—é {feelings}, 
    –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –≤–∞–∂–Ω–æ {needs}. 
    –ù–µ –º–æ–≥(–ª–∞) –±—ã —Ç—ã {request}?¬ª

    üåü *–°–æ–≤–µ—Ç—ã –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:*
    ‚Ä¢ –ì–æ–≤–æ—Ä–∏—Ç–µ —Å–ø–æ–∫–æ–π–Ω—ã–º —Ç–æ–Ω–æ–º
    ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–¥—Ö–æ–¥—è—â–µ–µ –≤—Ä–µ–º—è
    ‚Ä¢ –°–ª—É—à–∞–π—Ç–µ –æ—Ç–≤–µ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–∞
    ‚Ä¢ –ë—É–¥—å—Ç–µ –æ—Ç–∫—Ä—ã—Ç—ã –∫ –∫–æ–º–ø—Ä–æ–º–∏—Å—Å—É

    *–ü–æ–º–Ω–∏—Ç–µ:* –¶–µ–ª—å - –Ω–µ –ø–æ–±–µ–¥–∏—Ç—å –≤ —Å–ø–æ—Ä–µ, –∞ –ø–æ–Ω—è—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –∏ –Ω–∞–π—Ç–∏ —Ä–µ—à–µ–Ω–∏–µ!
    """
    
    await update.message.reply_text(final_phrase, parse_mode='Markdown', reply_markup=get_main_keyboard())
    
    context.user_data.pop('nvc_data', None)

async def show_example_phrase(update: Update, context: ContextTypes.DEFAULT_TYPE):
    examples = [
        {
            "situation": "üíî –ü–∞—Ä—Ç–Ω–µ—Ä –∑–∞–±—ã–ª –æ –≤–∞–∂–Ω–æ–π –¥–∞—Ç–µ",
            "phrase": "¬´–ö–æ–≥–¥–∞ —Ç—ã –∑–∞–±—ã–ª –æ –Ω–∞—à–µ–π –≥–æ–¥–æ–≤—â–∏–Ω–µ, —è –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞–ª(–∞) –≥—Ä—É—Å—Ç—å –∏ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –¥–ª—è –º–µ–Ω—è –≤–∞–∂–Ω—ã –Ω–∞—à–∏ —Ç—Ä–∞–¥–∏—Ü–∏–∏ –∏ –≤–Ω–∏–º–∞–Ω–∏–µ –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É. –ú–æ–≥(–ª–∞) –±—ã —Ç—ã –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –æ—Ç–º–µ—Ç–∏—Ç—å —ç—Ç—É –¥–∞—Ç—É –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ?¬ª"
        },
        {
            "situation": "üò† –ü–∞—Ä—Ç–Ω–µ—Ä –ø–µ—Ä–µ–±–∏–≤–∞–µ—Ç –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞",
            "phrase": "¬´–ö–æ–≥–¥–∞ —Ç—ã –ø–µ—Ä–µ–±–∏–≤–∞–µ—à—å –º–µ–Ω—è –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, —è —á—É–≤—Å—Ç–≤—É—é —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏–µ –∏ –Ω–µ—É–≤–∞–∂–µ–Ω–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –≤–∞–∂–Ω–æ, —á—Ç–æ–±—ã –º–æ–µ –º–Ω–µ–Ω–∏–µ —Ç–æ–∂–µ –±—ã–ª–æ —É—Å–ª—ã—à–∞–Ω–æ. –ù–µ –º–æ–≥(–ª–∞) –±—ã —Ç—ã –¥–∞–≤–∞—Ç—å –º–Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—å –º—ã—Å–ª—å?¬ª"
        },
        {
            "situation": "üì± –ü–∞—Ä—Ç–Ω–µ—Ä –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ",
            "phrase": "¬´–ö–æ–≥–¥–∞ —Ç—ã –ø—Ä–æ–≤–æ–¥–∏—à—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–µ, –ø–æ–∫–∞ –º—ã –≤–º–µ—Å—Ç–µ, —è —á—É–≤—Å—Ç–≤—É—é –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ –∏ –Ω–µ–Ω—É–∂–Ω–æ—Å—Ç—å, –ø–æ—Ç–æ–º—É —á—Ç–æ –º–Ω–µ –≤–∞–∂–Ω–æ –Ω–∞—à–µ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è. –ú–æ–≥(–ª–∞) –±—ã —Ç—ã –æ—Ç–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ç–µ–ª–µ—Ñ–æ–Ω, –∫–æ–≥–¥–∞ –º—ã –æ–±—â–∞–µ–º—Å—è?¬ª"
        }
    ]
    
    text = "üìã *–ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã—Ö —Ñ—Ä–∞–∑ –ø–æ –º–µ—Ç–æ–¥—É –ù–ù–û:*\n\n"
    
    for example in examples:
        text += f"*{example['situation']}*\n"
        text += f"{example['phrase']}\n\n"
    
    text += "üí° *–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–∏ –ø—Ä–∏–º–µ—Ä—ã –∫–∞–∫ —à–∞–±–ª–æ–Ω –¥–ª—è —Å–≤–æ–∏—Ö —Å–∏—Ç—É–∞—Ü–∏–π!*"
    
    await update.message.reply_text(text, parse_mode='Markdown', reply_markup=get_main_keyboard())

async def explain_nvc(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—ä—è—Å–Ω—è–µ—Ç —á—Ç–æ —Ç–∞–∫–æ–µ –ù–µ–Ω–∞—Å–∏–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–µ –û–±—â–µ–Ω–∏–µ"""
    text = """
    üí° *–ß—Ç–æ —Ç–∞–∫–æ–µ –ù–µ–Ω–∞—Å–∏–ª—å—Å—Ç–≤–µ–Ω–Ω–æ–µ –û–±—â–µ–Ω–∏–µ (–ù–ù–û)?*

    –ù–ù–û ‚Äî —ç—Ç–æ –º–µ—Ç–æ–¥ –æ–±—â–µ–Ω–∏—è, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º –ú–∞—Ä—à–∞–ª–ª–æ–º –†–æ–∑–µ–Ω–±–µ—Ä–≥–æ–º, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç:

    ‚Ä¢ üó£Ô∏è *–í—ã—Ä–∞–∂–∞—Ç—å —Å–µ–±—è* —á–µ—Å—Ç–Ω–æ –∏ —è—Å–Ω–æ
    ‚Ä¢ üëÇ *–°–ª—É—à–∞—Ç—å –¥—Ä—É–≥–∏—Ö* —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∏ –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º  
    ‚Ä¢ ü§ù *–†–∞–∑—Ä–µ—à–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç—ã* –º–∏—Ä–Ω—ã–º –ø—É—Ç–µ–º
    ‚Ä¢ üíñ *–°—Ç—Ä–æ–∏—Ç—å –æ—Ç–Ω–æ—à–µ–Ω–∏—è* –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∑–∞–∏–º–Ω–æ–≥–æ —É–≤–∞–∂–µ–Ω–∏—è

    üìö *4 –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –ù–ù–û:*

    1. *–ù–∞–±–ª—é–¥–µ–Ω–∏—è* üìù
    - –§–∞–∫—Ç—ã –±–µ–∑ –æ—Ü–µ–Ω–æ–∫ –∏ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–π
    - ¬´–ß—Ç–æ —è –≤–∏–∂—É/—Å–ª—ã—à—É?¬ª

    2. *–ß—É–≤—Å—Ç–≤–∞* üíñ  
    - –ù–∞—à–∏ —ç–º–æ—Ü–∏–∏ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–∏—Ç—É–∞—Ü–∏—é
    - ¬´–ß—Ç–æ —è —á—É–≤—Å—Ç–≤—É—é?¬ª

    3. *–ü–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏* üéØ
    - –ù–∞—à–∏ –≥–ª—É–±–∏–Ω–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –∂–µ–ª–∞–Ω–∏—è
    - ¬´–ß—Ç–æ –¥–ª—è –º–µ–Ω—è –≤–∞–∂–Ω–æ?¬ª

    4. *–ü—Ä–æ—Å—å–±—ã* üôè
    - –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, –≤—ã–ø–æ–ª–Ω–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
    - ¬´–û —á–µ–º —è –ø—Ä–æ—à—É?¬ª

    üåü *–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ù–ù–û:*
    ‚Ä¢ –£–º–µ–Ω—å—à–∞–µ—Ç –∑–∞—â–∏—Ç–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é
    ‚Ä¢ –°–æ–∑–¥–∞–µ—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –¥–æ–≤–µ—Ä–∏—è
    ‚Ä¢ –ü–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –≤–∑–∞–∏–º–æ–≤—ã–≥–æ–¥–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è
    ‚Ä¢ –£–∫—Ä–µ–ø–ª—è–µ—Ç —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é —Å–≤—è–∑—å

    *–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ù–ù–û –≤ –≤–∞—à–∏—Ö –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö!* ‚ú®
    """
    
    await update.message.reply_text(text, parse_mode='Markdown', reply_markup=get_main_keyboard())
