from telegram import Update
from telegram.ext import ContextTypes
from utils.keyboards import get_truth_or_dare_keyboard, get_categories_keyboard
import random
from data.truth_or_dare import truth_questions, dare_actions

async def truth_or_dare_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = f"""
    üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ*
    
    –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É - –ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ!
    
    –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:
    """
    await update.message.reply_text(text, reply_markup=get_truth_or_dare_keyboard(), parse_mode='Markdown')

async def truth_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['current_game'] = 'truth'

    text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–ü—Ä–∞–≤–¥–∞:*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å–æ–≤:"

    categories = [category["category"] for category in truth_questions]
    categories.append("üîÑ –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å—ë")

    await update.message.reply_text(text, reply_markup=get_categories_keyboard(categories), parse_mode='Markdown')

async def dare_game(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data['current_game'] = 'dare'

    text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–î–µ–π—Å—Ç–≤–∏–µ:*\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –¥–µ–π—Å—Ç–≤–∏–π:"

    categories = [category["category"] for category in dare_actions]
    categories.append("üîÑ –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å—ë")

    await update.message.reply_text(text, reply_markup=get_categories_keyboard(categories), parse_mode='Markdown')


async def handle_category_selection(update: Update, context: ContextTypes.DEFAULT_TYPE):
    selected_category = update.message.text
    game_type = context.user_data.get('current_game', 'truth')
    
    if selected_category == "üîÑ –ü–µ—Ä–µ–º–µ—à–∞—Ç—å –≤—Å—ë":
        if game_type == 'truth':
            all_questions = []
            for category in truth_questions:
                all_questions.extend(category["questions"])
            item = random.choice(all_questions)
            text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–ü—Ä–∞–≤–¥–∞ (—Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è):*\n\n{item}"
        else:
            all_actions = []
            for category in dare_actions:
                all_actions.extend(category["actions"])
            item = random.choice(all_actions)
            text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–î–µ–π—Å—Ç–≤–∏–µ (—Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è):*\n\n{item}"
            
        await update.message.reply_text(text, reply_markup=get_truth_or_dare_keyboard(), parse_mode='Markdown')
        return
    
    if game_type == 'truth':
        category_data = next((cat for cat in truth_questions if cat["category"] == selected_category), None)
        if category_data:
            item = random.choice(category_data["questions"])
            text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–ü—Ä–∞–≤–¥–∞ ({selected_category}):*\n\n{item}"
            await update.message.reply_text(text, reply_markup=get_truth_or_dare_keyboard(), parse_mode='Markdown')
        else:
            await update.message.reply_text("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", reply_markup=get_truth_or_dare_keyboard())
    else:
        category_data = next((cat for cat in dare_actions if cat["category"] == selected_category), None)
        if category_data:
            item = random.choice(category_data["actions"])
            text = f"üé≤ *–ü—Ä–∞–≤–¥–∞ –∏–ª–∏ –î–µ–π—Å—Ç–≤–∏–µ?*\n\n*–î–µ–π—Å—Ç–≤–∏–µ ({selected_category}):*\n\n{item}"
            await update.message.reply_text(text, reply_markup=get_truth_or_dare_keyboard(), parse_mode='Markdown')
        else:
            await update.message.reply_text("‚ùå –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", reply_markup=get_truth_or_dare_keyboard())